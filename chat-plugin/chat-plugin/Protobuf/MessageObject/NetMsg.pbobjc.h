  
  

  
  
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

  

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class NCProtoHead;
@class NCProtoNetMsg;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum NCProtoDeviceType

typedef GPB_ENUM(NCProtoDeviceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  NCProtoDeviceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  NCProtoDeviceType_Ios = 0,
  NCProtoDeviceType_Android = 1,
  NCProtoDeviceType_Pc = 2,
};

GPBEnumDescriptor *NCProtoDeviceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL NCProtoDeviceType_IsValidValue(int32_t value);

#pragma mark - Enum NCProtoDeleteAction

typedef GPB_ENUM(NCProtoDeleteAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  NCProtoDeleteAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
   
  NCProtoDeleteAction_DeleteActionUnspecified = 0,

   
  NCProtoDeleteAction_DeleteActionHash = 1,

   
  NCProtoDeleteAction_DeleteActionSession = 2,

   
  NCProtoDeleteAction_DeleteActionAll = 3,
};

GPBEnumDescriptor *NCProtoDeleteAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL NCProtoDeleteAction_IsValidValue(int32_t value);

#pragma mark - NCProtoNetMsgRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface NCProtoNetMsgRoot : GPBRootObject
@end

#pragma mark - NCProtoNetMsg

typedef GPB_ENUM(NCProtoNetMsg_FieldNumber) {
  NCProtoNetMsg_FieldNumber_Name = 1,
  NCProtoNetMsg_FieldNumber_Data_p = 2,
  NCProtoNetMsg_FieldNumber_Compress = 3,
  NCProtoNetMsg_FieldNumber_Head = 4,
};

@interface NCProtoNetMsg : GPBMessage

 
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

 
@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

 
@property(nonatomic, readwrite) BOOL compress;

 
@property(nonatomic, readwrite, strong, null_resettable) NCProtoHead *head;
/** Test to see if @c head has been set. */
@property(nonatomic, readwrite) BOOL hasHead;

@end

#pragma mark - NCProtoHead

typedef GPB_ENUM(NCProtoHead_FieldNumber) {
  NCProtoHead_FieldNumber_FromPubKey = 1,
  NCProtoHead_FieldNumber_ToPubKey = 2,
  NCProtoHead_FieldNumber_Signature = 3,
  NCProtoHead_FieldNumber_MsgTime = 4,
  NCProtoHead_FieldNumber_MsgId = 5,
};

@interface NCProtoHead : GPBMessage

 
@property(nonatomic, readwrite, copy, null_resettable) NSData *fromPubKey;

/** 接收方公钥，如果消息没有接收方，则不填 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *toPubKey;

/** 消息签名，对name, data, compress, from_pub_key,to_pub_key签名，不包含msg_time */
@property(nonatomic, readwrite, copy, null_resettable) NSData *signature;

/** 消息时间，服务端可以修改这个字段，不影响签名 */
@property(nonatomic, readwrite) uint64_t msgTime;

/** 消息ID，服务端可以修改，不影响签名 */
@property(nonatomic, readwrite) int64_t msgId;

@end

#pragma mark - NCProtoHeartbeat

@interface NCProtoHeartbeat : GPBMessage

@end

#pragma mark - NCProtoClientReceipt

typedef GPB_ENUM(NCProtoClientReceipt_FieldNumber) {
  NCProtoClientReceipt_FieldNumber_Result = 1,
};

@interface NCProtoClientReceipt : GPBMessage

/** 客户端处理的结果 0: 成功，非0: 失败 */
@property(nonatomic, readwrite) int32_t result;

@end

#pragma mark - NCProtoServerReceipt

typedef GPB_ENUM(NCProtoServerReceipt_FieldNumber) {
  NCProtoServerReceipt_FieldNumber_Result = 1,
  NCProtoServerReceipt_FieldNumber_MsgName = 2,
};

@interface NCProtoServerReceipt : GPBMessage

/** 服务端处理的结果 0: 成功，非0: 失败 */
@property(nonatomic, readwrite) int32_t result;

 
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgName;

@end

#pragma mark - NCProtoRegisterReq

typedef GPB_ENUM(NCProtoRegisterReq_FieldNumber) {
  NCProtoRegisterReq_FieldNumber_DeviceType = 1,
  NCProtoRegisterReq_FieldNumber_Version = 2,
};

@interface NCProtoRegisterReq : GPBMessage

 
@property(nonatomic, readwrite) NCProtoDeviceType deviceType;

 
@property(nonatomic, readwrite) uint32_t version;

@end

/**
 * Fetches the raw value of a @c NCProtoRegisterReq's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t NCProtoRegisterReq_DeviceType_RawValue(NCProtoRegisterReq *message);
/**
 * Sets the raw value of an @c NCProtoRegisterReq's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetNCProtoRegisterReq_DeviceType_RawValue(NCProtoRegisterReq *message, int32_t value);

#pragma mark - NCProtoRegisterRsp

typedef GPB_ENUM(NCProtoRegisterRsp_FieldNumber) {
  NCProtoRegisterRsp_FieldNumber_Result = 1,
  NCProtoRegisterRsp_FieldNumber_ServerPubKey = 2,
};

@interface NCProtoRegisterRsp : GPBMessage

/** 注册返回码 0: 成功，非0: 失败 */
@property(nonatomic, readwrite) int32_t result;

 
@property(nonatomic, readwrite, copy, null_resettable) NSData *serverPubKey;

@end

#pragma mark - NCProtoAppleIdBind

typedef GPB_ENUM(NCProtoAppleIdBind_FieldNumber) {
  NCProtoAppleIdBind_FieldNumber_AppleId = 2,
};

@interface NCProtoAppleIdBind : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *appleId;

@end

#pragma mark - NCProtoAppleIdUnbind

typedef GPB_ENUM(NCProtoAppleIdUnbind_FieldNumber) {
  NCProtoAppleIdUnbind_FieldNumber_AppleId = 2,
};

@interface NCProtoAppleIdUnbind : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *appleId;

@end

#pragma mark - NCProtoCacheMsgReq

typedef GPB_ENUM(NCProtoCacheMsgReq_FieldNumber) {
  NCProtoCacheMsgReq_FieldNumber_RoundId = 1,
  NCProtoCacheMsgReq_FieldNumber_Time = 2,
  NCProtoCacheMsgReq_FieldNumber_Hash_p = 3,
  NCProtoCacheMsgReq_FieldNumber_Size = 4,
};

@interface NCProtoCacheMsgReq : GPBMessage

 
@property(nonatomic, readwrite) uint32_t roundId;

/** 获取消息时间，毫秒 */
@property(nonatomic, readwrite) uint64_t time;

 
@property(nonatomic, readwrite) int64_t hash_p;

 
@property(nonatomic, readwrite) uint32_t size;

@end

#pragma mark - NCProtoCacheMsgRsp

typedef GPB_ENUM(NCProtoCacheMsgRsp_FieldNumber) {
  NCProtoCacheMsgRsp_FieldNumber_RoundId = 1,
  NCProtoCacheMsgRsp_FieldNumber_MsgsArray = 2,
};

@interface NCProtoCacheMsgRsp : GPBMessage

/** 消息轮次，req字段原样返回 */
@property(nonatomic, readwrite) uint32_t roundId;

 
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NCProtoNetMsg*> *msgsArray;
/** The number of items in @c msgsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger msgsArray_Count;

@end

#pragma mark - NCProtoDeleteCacheMsg

typedef GPB_ENUM(NCProtoDeleteCacheMsg_FieldNumber) {
  NCProtoDeleteCacheMsg_FieldNumber_Action = 1,
  NCProtoDeleteCacheMsg_FieldNumber_Hash_p = 2,
  NCProtoDeleteCacheMsg_FieldNumber_RelatedPubKey = 3,
};

@interface NCProtoDeleteCacheMsg : GPBMessage

@property(nonatomic, readwrite) NCProtoDeleteAction action;

/** DELETE_ACTION_HASH，要删除的消息hash */
@property(nonatomic, readwrite) int64_t hash_p;

/** DELETE_ACTION_SESSION，传入对方的公钥 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *relatedPubKey;

@end

/**
 * Fetches the raw value of a @c NCProtoDeleteCacheMsg's @c action property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t NCProtoDeleteCacheMsg_Action_RawValue(NCProtoDeleteCacheMsg *message);
/**
 * Sets the raw value of an @c NCProtoDeleteCacheMsg's @c action property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetNCProtoDeleteCacheMsg_Action_RawValue(NCProtoDeleteCacheMsg *message, int32_t value);

#pragma mark - NCProtoLogonNotify

typedef GPB_ENUM(NCProtoLogonNotify_FieldNumber) {
  NCProtoLogonNotify_FieldNumber_DeviceType = 1,
};

@interface NCProtoLogonNotify : GPBMessage

@property(nonatomic, readwrite) NCProtoDeviceType deviceType;

@end

/**
 * Fetches the raw value of a @c NCProtoLogonNotify's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t NCProtoLogonNotify_DeviceType_RawValue(NCProtoLogonNotify *message);
/**
 * Sets the raw value of an @c NCProtoLogonNotify's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetNCProtoLogonNotify_DeviceType_RawValue(NCProtoLogonNotify *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

  
